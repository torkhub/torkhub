{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\n\nclass ModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      unmountOnClose: true\n    };\n    this.toggle = this.toggle.bind(this);\n    this.changeUnmountOnClose = this.changeUnmountOnClose.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  changeUnmountOnClose(e) {\n    let value = e.target.value;\n    this.setState({\n      unmountOnClose: JSON.parse(value)\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Form, {\n      inline: true,\n      onSubmit: e => e.preventDefault()\n    }, __jsx(FormGroup, null, __jsx(Label, {\n      for: \"unmountOnClose\"\n    }, \"UnmountOnClose value\"), ' ', __jsx(Input, {\n      type: \"select\",\n      name: \"unmountOnClose\",\n      id: \"unmountOnClose\",\n      onChange: this.changeUnmountOnClose\n    }, __jsx(\"option\", {\n      value: \"true\"\n    }, \"true\"), __jsx(\"option\", {\n      value: \"false\"\n    }, \"false\"))), ' ', __jsx(Button, {\n      color: \"danger\",\n      onClick: this.toggle\n    }, this.props.buttonLabel)), __jsx(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      unmountOnClose: this.state.unmountOnClose\n    }, __jsx(ModalHeader, {\n      toggle: this.toggle\n    }, \"Modal title\"), __jsx(ModalBody, null, __jsx(Input, {\n      type: \"textarea\",\n      placeholder: \"Write something (data should remain in modal if unmountOnClose is set to false)\",\n      rows: 5\n    })), __jsx(ModalFooter, null, __jsx(Button, {\n      color: \"primary\",\n      onClick: this.toggle\n    }, \"Do Something\"), ' ', __jsx(Button, {\n      color: \"secondary\",\n      onClick: this.toggle\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default ModalExample;","map":null,"metadata":{},"sourceType":"module"}