{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nexport default class Example extends React.Component {\n  render() {\n    return __jsx(Form, null, __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"exampleEmail\",\n      sm: 2\n    }, \"Email\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"with a placeholder\"\n    }))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"examplePassword\",\n      sm: 2\n    }, \"Password\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"password placeholder\"\n    }))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"exampleSelect\",\n      sm: 2\n    }, \"Select\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\"\n    }))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"exampleSelectMulti\",\n      sm: 2\n    }, \"Select Multiple\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"select\",\n      name: \"selectMulti\",\n      id: \"exampleSelectMulti\",\n      multiple: true\n    }))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"exampleText\",\n      sm: 2\n    }, \"Text Area\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      id: \"exampleText\"\n    }))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"exampleFile\",\n      sm: 2\n    }, \"File\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(Input, {\n      type: \"file\",\n      name: \"file\",\n      id: \"exampleFile\"\n    }), __jsx(FormText, {\n      color: \"muted\"\n    }, \"This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.\"))), __jsx(FormGroup, {\n      tag: \"fieldset\",\n      row: true\n    }, __jsx(\"legend\", {\n      className: \"col-form-label col-sm-2\"\n    }, \"Radio Buttons\"), __jsx(Col, {\n      sm: 10\n    }, __jsx(FormGroup, {\n      check: true\n    }, __jsx(Label, {\n      check: true\n    }, __jsx(Input, {\n      type: \"radio\",\n      name: \"radio2\"\n    }), ' ', \"Option one is this and that\\u2014be sure to include why it's great\")), __jsx(FormGroup, {\n      check: true\n    }, __jsx(Label, {\n      check: true\n    }, __jsx(Input, {\n      type: \"radio\",\n      name: \"radio2\"\n    }), ' ', \"Option two can be something else and selecting it will deselect option one\")), __jsx(FormGroup, {\n      check: true,\n      disabled: true\n    }, __jsx(Label, {\n      check: true\n    }, __jsx(Input, {\n      type: \"radio\",\n      name: \"radio2\",\n      disabled: true\n    }), ' ', \"Option three is disabled\")))), __jsx(FormGroup, {\n      row: true\n    }, __jsx(Label, {\n      for: \"checkbox2\",\n      sm: 2\n    }, \"Checkbox\"), __jsx(Col, {\n      sm: {\n        size: 10\n      }\n    }, __jsx(FormGroup, {\n      check: true\n    }, __jsx(Label, {\n      check: true\n    }, __jsx(Input, {\n      type: \"checkbox\",\n      id: \"checkbox2\"\n    }), ' ', \"Check me out\")))), __jsx(FormGroup, {\n      check: true,\n      row: true\n    }, __jsx(Col, {\n      sm: {\n        size: 10,\n        offset: 2\n      }\n    }, __jsx(Button, null, \"Submit\"))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}