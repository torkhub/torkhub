{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Footer from \"./Footer\";\nimport Head from \"next/head\";\nimport Header from \"./Header\";\nimport NProgress from \"nprogress\";\nimport Router from \"next/router\";\nimport Sidebar from \"./Sidebar\";\nimport SidebarMenu from \"./SidebarMenu\";\nimport { capitalize } from \"../../lib/helpers\";\nimport { useAppState } from \"./AppProvider\";\nimport { withRouter } from \"next/router\";\nconst NonDashboardRoutes = [\"/signin\", \"/signup\", \"/forgot\", \"/lockscreen\", \"/_error\"];\nconst HeaderHidden = [\"/messages\", \"/maps/location\"];\nconst FooterHidden = [\"/messages\", \"/taskboard\", \"/maps/markers\", \"/maps/location\"];\n\nconst Page = ({\n  router,\n  children\n}) => {\n  const _useAppState = useAppState(),\n        _useAppState2 = _slicedToArray(_useAppState, 1),\n        state = _useAppState2[0];\n\n  const _useState = useState(true),\n        open = _useState[0],\n        setOpened = _useState[1];\n\n  useEffect(() => {\n    setOpened(state.mobile ? false : true);\n  }, [state.mobile]);\n\n  const onSetOpen = open => {\n    setOpened(open);\n  };\n\n  const toggleOpen = ev => {\n    setOpened(!open);\n\n    if (ev) {\n      ev.preventDefault();\n    }\n  };\n\n  Router.onRouteChangeStart = () => {\n    NProgress.start();\n  };\n\n  Router.onRouteChangeComplete = () => {\n    if (state.mobile) setOpened(false);\n    NProgress.done();\n    document.querySelector(\"body\").scrollTop = 0;\n  };\n\n  Router.onRouteChangeError = () => {\n    NProgress.done();\n  };\n\n  const isNotDashboard = NonDashboardRoutes.includes(router.pathname);\n  const isHeaderHidden = HeaderHidden.includes(router.pathname) && !state.mobile;\n  const isFooterHidden = FooterHidden.includes(router.pathname);\n\n  const sidebar = __jsx(SidebarMenu, null);\n\n  const sidebarProps = {\n    sidebar,\n    width: 280,\n    open,\n    onSetOpen: onSetOpen,\n    isMobile: state.mobile,\n    rootClass: \"page-wrapper\",\n    sidebarClass: \"page-sidebar\",\n    contentClass: \"page-content\"\n  };\n  let topHeader = null,\n      contentHeader = null;\n  state.topHeader ? topHeader = __jsx(Header, {\n    toggleOpen: toggleOpen\n  }) : contentHeader = __jsx(Header, {\n    toggleOpen: toggleOpen\n  });\n  const pageName = router.pathname.split(\"/\").reverse()[0];\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, pageName ? capitalize(pageName) : \"Eleven\", \" | Eleven Admin Template\")), __jsx(\"div\", {\n    className: \"page \".concat(state.darkMode ? \"dark-mode\" : \"\", \" \").concat(state.stickyHeader ? \"page-sticky-header\" : \"\", \" \").concat(state.stickySidebar ? \"page-sticky-sidebar\" : \"\", \" \").concat(state.boxed ? \"page-boxed\" : \"\", \" \").concat(isHeaderHidden ? \"page-header-hidden\" : \"\", \" \").concat(state.collapsed ? \"page-sidebar-collapsed\" : \"\", \" \").concat(state.topHeader ? \"page-top-header\" : \"\")\n  }, !isNotDashboard ? __jsx(React.Fragment, null, topHeader, __jsx(Sidebar, sidebarProps, !isHeaderHidden && contentHeader, __jsx(\"div\", {\n    className: \"page-inner bg-light \".concat(router.pathname === \"/messages\" ? \"p-0\" : \"\")\n  }, children), !isFooterHidden && __jsx(Footer, null))) : children));\n};\n\nexport default withRouter(Page);","map":null,"metadata":{},"sourceType":"module"}