{"ast":null,"code":"var _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/core/StatCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Card, Col, Row } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nconst StatCard = ({\n  reverse,\n  fill,\n  title,\n  value,\n  icon,\n  type,\n  clickHandler,\n  vertical\n}) => {\n  let before = null,\n      after = null;\n\n  const cardIcon = __jsx(Col, {\n    xs: \"auto\",\n    className: vertical ? \"p-3\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    style: {\n      padding: \"0.1rem\",\n      borderRadius: \"50%\",\n      minWidth: \"32px\",\n      minHeight: \"32px\"\n    },\n    onClick: clickHandler,\n    color: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, icon));\n\n  if (icon) {\n    reverse ? after = cardIcon : before = cardIcon;\n  }\n\n  return __jsx(Card, {\n    className: fill ? \"bg-\" + type : null,\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    className: vertical ? \"flex-column justify-content-center text-center align-items-center\" : \"justify-content-start align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, before, __jsx(Col, {\n    xs: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    className: `stat-widget-title mb-0 fw-400 ${fill ? \"text-white\" : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, value), __jsx(\"h6\", {\n    className: `stat-widget-subtitle ${fill ? \"text-white\" : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, title)), __jsx(\"span\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), after));\n};\n\nStatCard.propTypes = {\n  fill: PropTypes.bool,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  icon: PropTypes.element,\n  type: PropTypes.string\n};\nexport default StatCard;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/core/StatCard.js"],"names":["Button","Card","Col","Row","PropTypes","StatCard","reverse","fill","title","value","icon","type","clickHandler","vertical","before","after","cardIcon","padding","borderRadius","minWidth","minHeight","propTypes","bool","string","element"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,YAAvC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,IAFgB;AAGhBC,EAAAA,KAHgB;AAIhBC,EAAAA,KAJgB;AAKhBC,EAAAA,IALgB;AAMhBC,EAAAA,IANgB;AAOhBC,EAAAA,YAPgB;AAQhBC,EAAAA;AARgB,CAAD,KASX;AACJ,MAAIC,MAAM,GAAG,IAAb;AAAA,MACEC,KAAK,GAAG,IADV;;AAGA,QAAMC,QAAQ,GACZ,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAEH,QAAQ,GAAG,KAAH,GAAW,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,OAAO,EAAE,QADJ;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,SAAS,EAAE;AAJN,KADT;AAOE,IAAA,OAAO,EAAER,YAPX;AAQE,IAAA,KAAK,EAAED,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGD,IAVH,CADF,CADF;;AAiBA,MAAIA,IAAJ,EAAU;AACRJ,IAAAA,OAAO,GAAIS,KAAK,GAAGC,QAAZ,GAAyBF,MAAM,GAAGE,QAAzC;AACD;;AAED,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAET,IAAI,GAAG,QAAQI,IAAX,GAAkB,IAAvC;AAA6C,IAAA,IAAI,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AACE,IAAA,SAAS,EACPE,QAAQ,GACJ,mEADI,GAEJ,0CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,MAPH,EAQE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,iCACVP,IAAI,GAAG,YAAH,GAAkB,IACvB,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGE,KALH,CADF,EAQE;AAAI,IAAA,SAAS,EAAG,wBAAuBF,IAAI,GAAG,YAAH,GAAkB,IAAK,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KADH,CARF,CARF,EAoBE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBGO,KArBH,CADF,CADF;AA2BD,CA7DD;;AA+DAV,QAAQ,CAACgB,SAAT,GAAqB;AACnBd,EAAAA,IAAI,EAAEH,SAAS,CAACkB,IADG;AAEnBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB,MAFE;AAGnBd,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MAHE;AAInBb,EAAAA,IAAI,EAAEN,SAAS,CAACoB,OAJG;AAKnBb,EAAAA,IAAI,EAAEP,SAAS,CAACmB;AALG,CAArB;AAQA,eAAelB,QAAf","sourcesContent":["import { Button, Card, Col, Row } from \"reactstrap\";\n\nimport PropTypes from \"prop-types\";\n\nconst StatCard = ({\n  reverse,\n  fill,\n  title,\n  value,\n  icon,\n  type,\n  clickHandler,\n  vertical\n}) => {\n  let before = null,\n    after = null;\n\n  const cardIcon = (\n    <Col xs=\"auto\" className={vertical ? \"p-3\" : \"\"}>\n      <Button\n        style={{\n          padding: \"0.1rem\",\n          borderRadius: \"50%\",\n          minWidth: \"32px\",\n          minHeight: \"32px\"\n        }}\n        onClick={clickHandler}\n        color={type}\n      >\n        {icon}\n      </Button>\n    </Col>\n  );\n\n  if (icon) {\n    reverse ? (after = cardIcon) : (before = cardIcon);\n  }\n\n  return (\n    <Card className={fill ? \"bg-\" + type : null} body>\n      <Row\n        className={\n          vertical\n            ? \"flex-column justify-content-center text-center align-items-center\"\n            : \"justify-content-start align-items-center\"\n        }\n      >\n        {before}\n        <Col xs=\"auto\">\n          <h5\n            className={`stat-widget-title mb-0 fw-400 ${\n              fill ? \"text-white\" : null\n            }`}\n          >\n            {value}\n          </h5>\n          <h6 className={`stat-widget-subtitle ${fill ? \"text-white\" : null}`}>\n            {title}\n          </h6>\n        </Col>\n        <span className=\"mr-auto\" />\n        {after}\n      </Row>\n    </Card>\n  );\n};\n\nStatCard.propTypes = {\n  fill: PropTypes.bool,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  icon: PropTypes.element,\n  type: PropTypes.string\n};\n\nexport default StatCard;\n"]},"metadata":{},"sourceType":"module"}