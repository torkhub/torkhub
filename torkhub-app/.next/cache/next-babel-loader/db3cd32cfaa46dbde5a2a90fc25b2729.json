{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/MapMarkers.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MapGL, { Marker, NavigationControl, Popup } from \"react-map-gl\";\nimport CityInfo from \"../demos/map/city-info\";\nimport CityPin from \"../demos/map/city-pin\";\nimport Head from \"next/head\";\nimport fetch from \"../lib/fetch\";\nimport useSWR from \"swr\";\nimport { useState } from \"react\";\n\nconst MapMarkers = () => {\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.baseUrl}api/cities`, fetch);\n  const {\n    0: viewport,\n    1: setViewport\n  } = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n  const {\n    0: popupInfo,\n    1: setPopupInfo\n  } = useState(null);\n\n  const _updateViewport = viewport => {\n    setViewport(viewport);\n  };\n\n  const _renderCityMarker = (city, index) => {\n    return __jsx(Marker, {\n      key: `marker-${index}`,\n      longitude: city.longitude,\n      latitude: city.latitude,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(CityPin, {\n      size: 20,\n      onClick: () => setPopupInfo(city),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const _renderPopup = () => popupInfo && __jsx(Popup, {\n    tipSize: 5,\n    anchor: \"top\",\n    longitude: popupInfo.longitude,\n    latitude: popupInfo.latitude,\n    onClose: () => setPopupInfo(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(CityInfo, {\n    info: popupInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Failed to load media data\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    href: \"https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.0/mapbox-gl.css\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(MapGL, _extends({}, viewport, {\n    width: \"100%\",\n    height: \"100%\",\n    mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n    onViewportChange: _updateViewport,\n    mapboxApiAccessToken: process.env.mapBoxApi,\n    style: {\n      position: \"absolute\",\n      top: \"0px\",\n      left: \"0px\",\n      right: \"0px\",\n      bottom: \"0px\",\n      overflow: \"hidden\",\n      flex: \"1 1 auto\",\n      flexDirection: \"row\",\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), data.map(_renderCityMarker), _renderPopup(), __jsx(NavigationControl, {\n    onViewportChange: _updateViewport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MapMarkers;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/MapMarkers.js"],"names":["MapGL","Marker","NavigationControl","Popup","CityInfo","CityPin","Head","fetch","useSWR","useState","MapMarkers","data","error","process","env","baseUrl","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","popupInfo","setPopupInfo","_updateViewport","_renderCityMarker","city","index","_renderPopup","mapBoxApi","position","top","left","right","bottom","overflow","flex","flexDirection","display","map"],"mappings":"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","sourcesContent":["import MapGL, { Marker, NavigationControl, Popup } from \"react-map-gl\";\n\nimport CityInfo from \"../demos/map/city-info\";\nimport CityPin from \"../demos/map/city-pin\";\nimport Head from \"next/head\";\nimport fetch from \"../lib/fetch\";\nimport useSWR from \"swr\";\nimport { useState } from \"react\";\n\nconst MapMarkers = () => {\n  const { data, error } = useSWR(`${process.env.baseUrl}api/cities`, fetch);\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n  const [popupInfo, setPopupInfo] = useState(null);\n\n  const _updateViewport = viewport => {\n    setViewport(viewport);\n  };\n\n  const _renderCityMarker = (city, index) => {\n    return (\n      <Marker\n        key={`marker-${index}`}\n        longitude={city.longitude}\n        latitude={city.latitude}\n      >\n        <CityPin size={20} onClick={() => setPopupInfo(city)} />\n      </Marker>\n    );\n  };\n\n  const _renderPopup = () =>\n    popupInfo && (\n      <Popup\n        tipSize={5}\n        anchor=\"top\"\n        longitude={popupInfo.longitude}\n        latitude={popupInfo.latitude}\n        onClose={() => setPopupInfo(null)}\n      >\n        <CityInfo info={popupInfo} />\n      </Popup>\n    );\n\n  if (error) return <div>Failed to load media data</div>;\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <>\n      <Head>\n        <link\n          href=\"https://api.tiles.mapbox.com/mapbox-gl-js/v1.6.0/mapbox-gl.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <MapGL\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onViewportChange={_updateViewport}\n        mapboxApiAccessToken={process.env.mapBoxApi}\n        style={{\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          overflow: \"hidden\",\n          flex: \"1 1 auto\",\n          flexDirection: \"row\",\n          display: \"flex\"\n        }}\n      >\n        {data.map(_renderCityMarker)}\n        {_renderPopup()}\n        <NavigationControl onViewportChange={_updateViewport} />\n      </MapGL>\n    </>\n  );\n};\n\nexport default MapMarkers;\n"]},"metadata":{},"sourceType":"module"}