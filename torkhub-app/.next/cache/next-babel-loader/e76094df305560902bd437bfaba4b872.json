{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, CardBody } from \"reactstrap\";\nimport { capitalize, getWeatherIcon } from \"../../lib/helpers\";\nimport Divider from \"./Divider\";\nimport fetch from \"../../lib/fetch\";\nimport format from \"date-fns/format\";\nimport useSWR from \"swr\";\n\nconst DescriptionItem = ({\n  title,\n  content\n}) => __jsx(\"div\", {\n  className: \"d-flex mb-2 justify-content-between align-items-center\"\n}, __jsx(\"span\", null, title), __jsx(\"small\", {\n  className: \"px-2 d-inline-block\"\n}, content));\n\nconst ForecastItem = ({\n  content\n}) => __jsx(\"span\", {\n  style: {\n    display: \"block\",\n    margin: \"2px 0\"\n  }\n}, content);\n\nconst WeatherCard = ({\n  city,\n  country,\n  days\n}) => {\n  const _useSWR = useSWR(\"\".concat(process.env.baseUrl, \"api/weather?city=\").concat(city, \"&country=\").concat(country, \"&days=\").concat(days), fetch),\n        data = _useSWR.data,\n        error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", null, \"Failed to load data\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\");\n  return data && __jsx(Card, {\n    className: \"mb-4\"\n  }, __jsx(CardBody, {\n    className: \"pb-0\"\n  }, __jsx(\"div\", {\n    className: \"d-flex mb-4 justify-content-between align-items-center\"\n  }, __jsx(\"div\", null, __jsx(\"h5\", {\n    className: \"mb-0 font-weight-bold\"\n  }, \"\".concat(data.city.name, \", \").concat(data.city.country)), __jsx(\"h6\", {\n    className: \"mb-0\"\n  }, format(data.list[0].dt * 1000, \"MMMM Do YYYY\")), __jsx(\"small\", null, capitalize(data.list[0].weather[0].description))), __jsx(\"div\", {\n    className: \"text-right\"\n  }, __jsx(\"h3\", {\n    className: \"font-weight-light mb-0\"\n  }, __jsx(\"span\", null, data.list[0].main.temp, \"\\xB0\")))), __jsx(\"div\", {\n    className: \"d-flex justify-content-between align-items-center\",\n    style: {\n      flexWrap: \"wrap\"\n    }\n  }, _Object$keys(data.list[0].main).map((key, index) => __jsx(\"div\", {\n    key: index,\n    style: {\n      width: \"50%\"\n    }\n  }, __jsx(DescriptionItem, {\n    title: capitalize(key.replace(/_/g, \" \")),\n    content: data.list[0].main[key]\n  }))))), __jsx(Divider, {\n    text: \"Forecast\"\n  }), __jsx(CardBody, {\n    className: \"pt-0\"\n  }, __jsx(\"div\", {\n    className: \"text-center justify-content-between align-items-center d-flex\",\n    style: {\n      flexFlow: \"initial\"\n    }\n  }, data.list.map((day, index) => index !== 0 && __jsx(\"div\", {\n    className: \"text-center mb-0 d-flex align-items-center justify-content-center flex-column\",\n    key: index\n  }, __jsx(ForecastItem, {\n    content: format(day.dt * 1000, \"ddd\")\n  }), __jsx(ForecastItem, {\n    content: day.weather.description\n  }), __jsx(ForecastItem, {\n    content: getWeatherIcon(day.weather[0].icon, 24, \"rgba(0,0,0,.87)\")\n  }), __jsx(ForecastItem, {\n    content: \"\".concat(day.main.temp, \"\\xB0\")\n  }))))));\n};\n\nexport default WeatherCard;","map":null,"metadata":{},"sourceType":"module"}