{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Bar, Bubble, Doughnut, HorizontalBar, Line, Pie, Polar, Radar, defaults } from \"react-chartjs-2\";\nimport { Card, CardBody, CardHeader, Col, Row } from \"reactstrap\";\nimport fetch from \"../lib/fetch\";\nimport useSWR from \"swr\";\ndefaults.global.defaultFontFamily = \"Arimo\";\n\nconst Charts = () => {\n  const _useSWR = useSWR(\"\".concat(process.env.baseUrl, \"api/chart\"), fetch),\n        data = _useSWR.data,\n        error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", null, \"Failed to load chart data\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\");\n  return __jsx(Row, null, data.map((chart, index) => __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    key: index\n  }, __jsx(Card, {\n    className: \"mb-3\"\n  }, __jsx(CardHeader, null, chart.title, \" \", chart.subtitle), __jsx(CardBody, null, chart.type === \"bar\" && __jsx(Bar, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"horizontalbar\" && __jsx(HorizontalBar, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"line\" && __jsx(Line, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"bubble\" && __jsx(Bubble, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"doughnut\" && __jsx(Doughnut, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"pie\" && __jsx(Pie, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"polar\" && __jsx(Polar, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }), chart.type === \"radar\" && __jsx(Radar, {\n    data: chart.data,\n    height: chart.height,\n    options: chart.options\n  }))))));\n};\n\nexport default Charts;","map":null,"metadata":{},"sourceType":"module"}