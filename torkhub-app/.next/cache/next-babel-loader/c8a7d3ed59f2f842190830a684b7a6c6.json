{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/core/AppProvider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nconst Context = createContext();\nconst {\n  Provider\n} = Context;\nlet mql;\n\nconst saveToLocal = state => {\n  let stateCopy = _objectSpread({}, state);\n\n  delete stateCopy.mobile;\n  localStorage.setItem(\"settings\", _JSON$stringify(stateCopy));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"toggleFullscreen\":\n      {\n        const element = document.querySelector(\"#__next\");\n        const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\n\n        element.requestFullScreen = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || function () {\n          return false;\n        };\n\n        document.cancelFullScreen = document.cancelFullScreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || function () {\n          return false;\n        };\n\n        isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n        return _objectSpread({}, state, {\n          fullscreen: !isFullscreen\n        });\n      }\n\n    case \"toggleBoxed\":\n      {\n        const newState = _objectSpread({}, state, {\n          boxed: !state.boxed\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"toggleCollapsed\":\n      {\n        const newState = _objectSpread({}, state, {\n          collapsed: !state.collapsed\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"toggleDarkMode\":\n      {\n        const newState = _objectSpread({}, state, {\n          darkMode: !state.darkMode\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"toggleStickyHeader\":\n      {\n        const newState = _objectSpread({}, state, {\n          stickyHeader: !state.stickyHeader\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"toggleStickySidebar\":\n      {\n        const newState = _objectSpread({}, state, {\n          stickySidebar: !state.stickySidebar\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"toggleTopHeader\":\n      {\n        const newState = _objectSpread({}, state, {\n          topHeader: !state.topHeader\n        });\n\n        saveToLocal(newState);\n        return newState;\n      }\n\n    case \"setMobile\":\n      return _objectSpread({}, state, {\n        mobile: !mql.matches\n      });\n\n    case \"initialSetup\":\n      {\n        const settings = JSON.parse(localStorage.getItem(\"settings\"));\n        return _objectSpread({}, state, {\n          mobile: !mql.matches\n        }, settings);\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = props => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, {\n    name: \"Eleven\",\n    mobile: false,\n    boxed: false,\n    darkMode: false,\n    stickyHeader: false,\n    stickySidebar: true,\n    collapsed: false,\n    topHeader: false,\n    fullscreen: false\n  });\n  useEffect(() => {\n    mql = window.matchMedia(`(min-width: 992px)`);\n    mql.addListener(mediaQueryChanged);\n    dispatch({\n      type: \"initialSetup\"\n    });\n    return () => mql.removeListener(mediaQueryChanged);\n  }, []);\n\n  const mediaQueryChanged = () => {\n    dispatch({\n      type: \"setMobile\"\n    });\n  };\n\n  return __jsx(Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nexport default AppProvider;\nexport const useAppState = () => useContext(Context);","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/core/AppProvider.js"],"names":["createContext","useContext","useEffect","useReducer","Context","Provider","mql","saveToLocal","state","stateCopy","mobile","localStorage","setItem","reducer","action","type","element","document","querySelector","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","fullscreen","newState","boxed","collapsed","darkMode","stickyHeader","stickySidebar","topHeader","matches","settings","JSON","parse","getItem","AppProvider","props","dispatch","name","window","matchMedia","addListener","mediaQueryChanged","removeListener","children","useAppState"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useReducer } from \"react\";\n\nconst Context = createContext();\nconst { Provider } = Context;\nlet mql;\n\nconst saveToLocal = state => {\n  let stateCopy = { ...state };\n  delete stateCopy.mobile;\n  localStorage.setItem(\"settings\", JSON.stringify(stateCopy));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"toggleFullscreen\": {\n      const element = document.querySelector(\"#__next\");\n      const isFullscreen =\n        document.webkitIsFullScreen || document.mozFullScreen || false;\n\n      element.requestFullScreen =\n        element.requestFullScreen ||\n        element.webkitRequestFullScreen ||\n        element.mozRequestFullScreen ||\n        function() {\n          return false;\n        };\n\n      document.cancelFullScreen =\n        document.cancelFullScreen ||\n        document.webkitCancelFullScreen ||\n        document.mozCancelFullScreen ||\n        function() {\n          return false;\n        };\n\n      isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n\n      return { ...state, fullscreen: !isFullscreen };\n    }\n    case \"toggleBoxed\": {\n      const newState = { ...state, boxed: !state.boxed };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"toggleCollapsed\": {\n      const newState = { ...state, collapsed: !state.collapsed };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"toggleDarkMode\": {\n      const newState = { ...state, darkMode: !state.darkMode };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"toggleStickyHeader\": {\n      const newState = { ...state, stickyHeader: !state.stickyHeader };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"toggleStickySidebar\": {\n      const newState = { ...state, stickySidebar: !state.stickySidebar };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"toggleTopHeader\": {\n      const newState = { ...state, topHeader: !state.topHeader };\n      saveToLocal(newState);\n      return newState;\n    }\n    case \"setMobile\":\n      return { ...state, mobile: !mql.matches };\n    case \"initialSetup\": {\n      const settings = JSON.parse(localStorage.getItem(\"settings\"));\n      return { ...state, mobile: !mql.matches, ...settings };\n    }\n    default:\n      return state;\n  }\n};\n\nconst AppProvider = props => {\n  const [state, dispatch] = useReducer(reducer, {\n    name: \"Eleven\",\n    mobile: false,\n    boxed: false,\n    darkMode: false,\n    stickyHeader: false,\n    stickySidebar: true,\n    collapsed: false,\n    topHeader: false,\n    fullscreen: false\n  });\n\n  useEffect(() => {\n    mql = window.matchMedia(`(min-width: 992px)`);\n    mql.addListener(mediaQueryChanged);\n    dispatch({ type: \"initialSetup\" });\n    return () => mql.removeListener(mediaQueryChanged);\n  }, []);\n\n  const mediaQueryChanged = () => {\n    dispatch({ type: \"setMobile\" });\n  };\n\n  return <Provider value={[state, dispatch]}>{props.children}</Provider>;\n};\n\nexport default AppProvider;\nexport const useAppState = () => useContext(Context);\n"]},"metadata":{},"sourceType":"module"}