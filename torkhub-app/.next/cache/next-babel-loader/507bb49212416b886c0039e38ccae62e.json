{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport reorder, { reorderQuoteMap } from \"./core/taskboard/reorder\";\nimport Column from \"./core/taskboard/Column\";\nimport fetch from \"../lib/fetch\";\nimport useSWR from \"swr\";\nimport { useState } from \"react\";\n\nconst Taskboard = () => {\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.baseUrl}api/taskboard`, fetch);\n  if (error) return __jsx(\"div\", null, \"Failed to load data\");\n  if (!data) return __jsx(\"div\", null, \"Loading...\");\n  return __jsx(TaskboardInner, {\n    data: data\n  });\n};\n\nconst TaskboardInner = ({\n  data\n}) => {\n  const {\n    0: columns,\n    1: setColumn\n  } = useState(data);\n  const {\n    0: ordered,\n    1: setOrder\n  } = useState(_Object$keys(columns));\n\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const source = result.source;\n    const destination = result.destination;\n\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    if (result.type === \"COLUMN\") {\n      const ordered = reorder(ordered, source.index, destination.index);\n      setOrder(ordered);\n      return;\n    }\n\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination\n    });\n    setColumn(data.quoteMap);\n  };\n\n  return __jsx(\"div\", {\n    className: \"app-taskboard\"\n  }, __jsx(DragDropContext, {\n    onDragEnd: onDragEnd\n  }, __jsx(Droppable, {\n    droppableId: \"taskboard\",\n    type: \"COLUMN\"\n  }, provided => __jsx(\"div\", _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    className: \"h-100\"\n  }), ordered.map((key, index) => __jsx(Column, {\n    key: key,\n    index: index,\n    title: key,\n    tasks: columns[key]\n  }))))));\n};\n\nexport default Taskboard;","map":null,"metadata":{},"sourceType":"module"}