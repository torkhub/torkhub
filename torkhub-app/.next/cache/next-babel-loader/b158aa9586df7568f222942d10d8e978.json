{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst sharedOptions = {\n  borderWidth: 3,\n  pointRadius: 3,\n  pointBorderWidth: 1,\n  maintainAspectRatio: true,\n  responsive: true,\n  legend: {\n    display: false\n  }\n};\nconst gridOptions = {\n  scales: {\n    xAxes: [{\n      gridLines: {\n        color: \"rgba(0,0,0,0.02)\",\n        zeroLineColor: \"rgba(0,0,0,0)\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        color: \"rgba(0,0,0,0)\",\n        zeroLineColor: \"rgba(0,0,0,0)\"\n      },\n      position: \"left\",\n      ticks: {\n        display: false,\n        beginAtZero: true,\n        suggestedMax: 7\n      }\n    }]\n  }\n};\nconst colors = [{\n  backgroundColor: \"rgba(88, 77, 130, 0.05)\",\n  borderColor: \"rgba(88, 77, 130, 1)\",\n  pointBackgroundColor: \"rgba(88, 77, 130, 1)\",\n  pointBorderColor: \"#fff\"\n}, {\n  backgroundColor: \"#eeeeee\",\n  borderColor: \"#eeeeee\",\n  pointBackgroundColor: \"#eeeeee\",\n  pointBorderColor: \"#fff\"\n}, {\n  backgroundColor: \"#5dcff3\",\n  borderColor: \"#5dcff3\",\n  pointBackgroundColor: \"#5dcff3\",\n  pointBorderColor: \"#fff\"\n}];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst datasets = [{\n  label: \"Sales\",\n  backgroundColor: \"rgba(88, 77, 130, 1)\",\n  borderColor: \"rgba(88, 77, 130, 1)\",\n  pointBackgroundColor: \"rgba(88, 77, 130, 1)\",\n  pointBorderColor: \"#fff\",\n  borderWidth: 0,\n  data: [6]\n}, _objectSpread({\n  label: \"Views\"\n}, colors[1], {\n  borderWidth: 0,\n  data: [5]\n})];\nconst data = {\n  labels: [\"Jul\"],\n  datasets\n};\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst chartData = max => {\n  let data = [];\n\n  for (let index = 0; index < max; index++) {\n    data.push(randomIntFromInterval(4, 6));\n  }\n\n  return data;\n};\n\nconst lineData = {\n  labels,\n  datasets: [_objectSpread({\n    label: \"Sales\"\n  }, colors[0], {\n    data: chartData(12)\n  })]\n};\nconst lineData2 = {\n  labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  datasets: [_objectSpread({\n    label: \"Sales\"\n  }, colors[0], {\n    data: chartData(6)\n  })]\n};\nconst dataPie = {\n  labels: [\"Download Sales\", \"In-Store Sales\", \"Mail Sales\"],\n  datasets: [{\n    data: [350, 450, 100],\n    backgroundColor: [\"#584d82\", \"#eeeeee\", \"#5cad66\"]\n  }]\n};\nconst height = 60;\nconst dahboardData = {\n  chart: {\n    type: \"line\",\n    title: \"Sales Analytics\",\n    subtitle: \"Basic\",\n    data: lineData,\n    height: height,\n    options: _objectSpread({}, sharedOptions, {}, gridOptions)\n  },\n  charts: [{\n    type: \"line\",\n    title: \"Monthly page views\",\n    subtitle: \"Basic\",\n    data: lineData2,\n    height: 180,\n    options: _objectSpread({}, sharedOptions, {}, gridOptions)\n  }, {\n    type: \"bar\",\n    title: \"Revenue\",\n    subtitle: \"Stacked\",\n    data: data,\n    height: 180,\n    options: _objectSpread({}, sharedOptions, {}, gridOptions)\n  }, {\n    type: \"pie\",\n    title: \"Monthly visitors\",\n    subtitle: \"Basic\",\n    data: dataPie,\n    height: 180,\n    options: _objectSpread({}, sharedOptions, {\n      elements: {\n        arc: {\n          borderWidth: 0.5\n        }\n      }\n    })\n  }]\n};\nexport default ((req, res) => {\n  setTimeout(() => {\n    res.json(dahboardData);\n  }, 2000);\n});","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/pages/api/dashboard.js"],"names":["sharedOptions","borderWidth","pointRadius","pointBorderWidth","maintainAspectRatio","responsive","legend","display","gridOptions","scales","xAxes","gridLines","color","zeroLineColor","yAxes","position","ticks","beginAtZero","suggestedMax","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","labels","datasets","label","data","randomIntFromInterval","min","max","Math","floor","random","chartData","index","push","lineData","lineData2","dataPie","height","dahboardData","chart","type","title","subtitle","options","charts","elements","arc","req","res","setTimeout","json"],"mappings":"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","sourcesContent":["const sharedOptions = {\n  borderWidth: 3,\n  pointRadius: 3,\n  pointBorderWidth: 1,\n  maintainAspectRatio: true,\n  responsive: true,\n  legend: {\n    display: false\n  }\n};\n\nconst gridOptions = {\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          color: \"rgba(0,0,0,0.02)\",\n          zeroLineColor: \"rgba(0,0,0,0)\"\n        }\n      }\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          color: \"rgba(0,0,0,0)\",\n          zeroLineColor: \"rgba(0,0,0,0)\"\n        },\n        position: \"left\",\n        ticks: { display: false, beginAtZero: true, suggestedMax: 7 }\n      }\n    ]\n  }\n};\n\nconst colors = [\n  {\n    backgroundColor: \"rgba(88, 77, 130, 0.05)\",\n    borderColor: \"rgba(88, 77, 130, 1)\",\n    pointBackgroundColor: \"rgba(88, 77, 130, 1)\",\n    pointBorderColor: \"#fff\"\n  },\n  {\n    backgroundColor: \"#eeeeee\",\n    borderColor: \"#eeeeee\",\n    pointBackgroundColor: \"#eeeeee\",\n    pointBorderColor: \"#fff\"\n  },\n  {\n    backgroundColor: \"#5dcff3\",\n    borderColor: \"#5dcff3\",\n    pointBackgroundColor: \"#5dcff3\",\n    pointBorderColor: \"#fff\"\n  }\n];\n\nconst labels = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n\nconst datasets = [\n  {\n    label: \"Sales\",\n    backgroundColor: \"rgba(88, 77, 130, 1)\",\n    borderColor: \"rgba(88, 77, 130, 1)\",\n    pointBackgroundColor: \"rgba(88, 77, 130, 1)\",\n    pointBorderColor: \"#fff\",\n    borderWidth: 0,\n    data: [6]\n  },\n  {\n    label: \"Views\",\n    ...colors[1],\n    borderWidth: 0,\n    data: [5]\n  }\n];\n\nconst data = {\n  labels: [\"Jul\"],\n  datasets\n};\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst chartData = max => {\n  let data = [];\n  for (let index = 0; index < max; index++) {\n    data.push(randomIntFromInterval(4, 6));\n  }\n\n  return data;\n};\n\nconst lineData = {\n  labels,\n  datasets: [\n    {\n      label: \"Sales\",\n      ...colors[0],\n      data: chartData(12)\n    }\n  ]\n};\n\nconst lineData2 = {\n  labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  datasets: [\n    {\n      label: \"Sales\",\n      ...colors[0],\n      data: chartData(6)\n    }\n  ]\n};\n\nconst dataPie = {\n  labels: [\"Download Sales\", \"In-Store Sales\", \"Mail Sales\"],\n  datasets: [\n    {\n      data: [350, 450, 100],\n      backgroundColor: [\"#584d82\", \"#eeeeee\", \"#5cad66\"]\n    }\n  ]\n};\n\nconst height = 60;\n\nconst dahboardData = {\n  chart: {\n    type: \"line\",\n    title: \"Sales Analytics\",\n    subtitle: \"Basic\",\n    data: lineData,\n    height: height,\n    options: {\n      ...sharedOptions,\n      ...gridOptions\n    }\n  },\n  charts: [\n    {\n      type: \"line\",\n      title: \"Monthly page views\",\n      subtitle: \"Basic\",\n      data: lineData2,\n      height: 180,\n      options: {\n        ...sharedOptions,\n        ...gridOptions\n      }\n    },\n    {\n      type: \"bar\",\n      title: \"Revenue\",\n      subtitle: \"Stacked\",\n      data: data,\n      height: 180,\n      options: {\n        ...sharedOptions,\n        ...gridOptions\n      }\n    },\n    {\n      type: \"pie\",\n      title: \"Monthly visitors\",\n      subtitle: \"Basic\",\n      data: dataPie,\n      height: 180,\n      options: {\n        ...sharedOptions,\n        elements: {\n          arc: {\n            borderWidth: 0.5\n          }\n        }\n      }\n    }\n  ]\n};\n\nexport default (req, res) => {\n  setTimeout(() => {\n    res.json(dahboardData);\n  }, 2000);\n};\n"]},"metadata":{},"sourceType":"module"}