{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Img from \"react-image\";\nconst bootstrapColors = [\"primary\", \"success\", \"warning\", \"info\", \"secondary\", \"dark\", \"danger\"];\n\nconst Avatar = ({\n  src,\n  alt = \"image\",\n  size = 32,\n  status,\n  style\n}) => {\n  const circle = status && __jsx(\"span\", {\n    className: `text-${status} border-white status`,\n    style: {\n      width: size / 3,\n      height: size / 3\n    }\n  });\n\n  const iconSize = size ? size + \"px\" : \"32px\";\n  return __jsx(\"span\", {\n    className: \"position-relative d-flex rounded-circle\",\n    style: _objectSpread({\n      width: iconSize,\n      height: iconSize\n    }, style)\n  }, __jsx(Img, {\n    src: src,\n    alt: alt,\n    width: iconSize,\n    height: iconSize,\n    className: \"rounded-circle\",\n    unloader: __jsx(\"span\", {\n      className: `d-flex align-items-center justify-content-center w-100 h-100 bg-${bootstrapColors[Math.floor(Math.random() * bootstrapColors.length)]} text-light rounded-circle`\n    }, alt.charAt(0))\n  }), status && circle);\n};\n\nexport default Avatar;","map":null,"metadata":{},"sourceType":"module"}