{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/core/SidebarItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Badge, Collapse, Nav, NavItem, NavLink } from \"reactstrap\";\nimport AnimatedIcon from \"./AnimatedIcon\";\nimport Chevron from \"../../public/animated-icons/expand/expand.json\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\nimport { capitalize } from \"../../lib/helpers\";\nimport { useEffect } from \"react\";\nimport useHover from \"./UseHover\";\n\nconst SidebarItem = ({\n  currentPath,\n  activeRoute,\n  path,\n  index,\n  route,\n  toggleMenu,\n  pathname\n}) => {\n  const hasChildren = route.children ? true : false;\n\n  const _useHover = useHover(),\n        _useHover2 = _slicedToArray(_useHover, 2),\n        ref = _useHover2[0],\n        hovered = _useHover2[1];\n\n  const iconSize = 18;\n  useEffect(() => {\n    if (!currentPath || activeRoute === index || route.path === \"/\") return;\n    toggleMenu(index);\n  }, []);\n\n  const badgeTemplate = badge => __jsx(Badge, {\n    color: badge.type ? badge.type : \"default\",\n    pill: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, badge.value);\n\n  return __jsx(\"div\", {\n    className: \"sidebar-item\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(NavItem, {\n    key: index,\n    className: activeRoute === index ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, !hasChildren && __jsx(Link, {\n    href: \"\".concat(route.path),\n    as: \"\".concat(route.path.indexOf(\"//\") !== -1 ? \"\" : process.env.baseUrl).concat(route.path.replace(\"/\", \"\")),\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(NavLink, {\n    onClick: () => toggleMenu(index),\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(AnimatedIcon, {\n    animationData: route.icon,\n    size: iconSize,\n    isStopped: !hovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    className: \"mr-auto menu-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, capitalize(route.name)), route.badge && badgeTemplate(route.badge))), hasChildren && __jsx(NavLink, {\n    className: \"nav-link d-flex align-items-center\",\n    onClick: () => toggleMenu(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, __jsx(AnimatedIcon, {\n    animationData: route.icon,\n    size: iconSize,\n    isStopped: !hovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    className: \"mr-auto menu-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, capitalize(route.name)), route.badge && badgeTemplate(route.badge), hasChildren && __jsx(\"span\", {\n    className: \"caret  \".concat(activeRoute === index ? \"caret-active\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(AnimatedIcon, {\n    animationData: Chevron,\n    size: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  })))), hasChildren && __jsx(Collapse, {\n    isOpen: activeRoute === index ? true : false,\n    className: \"sub-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(Nav, {\n    vertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, route.children.map((subitem, index) => __jsx(NavItem, {\n    key: index,\n    className: pathname === route.path + subitem.path ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"\".concat(route.path ? route.path : \"\").concat(subitem.path ? subitem.path : \"\"),\n    as: \"\".concat(subitem.path.indexOf(\"//\") !== -1 ? \"\" : process.env.baseUrl).concat(route.path ? route.path.replace(\"/\", \"\") : \"\").concat(subitem.path ? subitem.path : \"\"),\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, __jsx(NavLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"mr-auto menu-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, capitalize(subitem.name)), subitem.badge && badgeTemplate(subitem.badge)))))))));\n};\n\nSidebarItem.propTypes = {\n  route: PropTypes.object,\n  index: PropTypes.number,\n  activeRoute: PropTypes.number,\n  toggleMenu: PropTypes.func\n};\nexport default SidebarItem;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/core/SidebarItem.js"],"names":["Badge","Collapse","Nav","NavItem","NavLink","AnimatedIcon","Chevron","Link","PropTypes","capitalize","useEffect","useHover","SidebarItem","currentPath","activeRoute","path","index","route","toggleMenu","pathname","hasChildren","children","ref","hovered","iconSize","badgeTemplate","badge","type","value","indexOf","process","env","baseUrl","replace","icon","name","map","subitem","propTypes","object","number","func"],"mappings":"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","sourcesContent":["import { Badge, Collapse, Nav, NavItem, NavLink } from \"reactstrap\";\n\nimport AnimatedIcon from \"./AnimatedIcon\";\nimport Chevron from \"../../public/animated-icons/expand/expand.json\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\nimport { capitalize } from \"../../lib/helpers\";\nimport { useEffect } from \"react\";\nimport useHover from \"./UseHover\";\n\nconst SidebarItem = ({\n  currentPath,\n  activeRoute,\n  path,\n  index,\n  route,\n  toggleMenu,\n  pathname\n}) => {\n  const hasChildren = route.children ? true : false;\n  const [ref, hovered] = useHover();\n  const iconSize = 18;\n\n  useEffect(() => {\n    if (!currentPath || activeRoute === index || route.path === \"/\") return;\n    toggleMenu(index);\n  }, []);\n\n  const badgeTemplate = badge => (\n    <Badge color={badge.type ? badge.type : \"default\"} pill>\n      {badge.value}\n    </Badge>\n  );\n\n  return (\n    <div className=\"sidebar-item\" ref={ref}>\n      <NavItem key={index} className={activeRoute === index ? \"active\" : \"\"}>\n        <>\n          {!hasChildren && (\n            <Link\n              href={`${route.path}`}\n              as={`${\n                route.path.indexOf(\"//\") !== -1 ? \"\" : process.env.baseUrl\n              }${route.path.replace(\"/\", \"\")}`}\n              passHref\n            >\n              <NavLink\n                onClick={() => toggleMenu(index)}\n                className=\"d-flex align-items-center\"\n              >\n                <AnimatedIcon\n                  animationData={route.icon}\n                  size={iconSize}\n                  isStopped={!hovered}\n                />\n                <span className=\"mr-auto menu-name\">\n                  {capitalize(route.name)}\n                </span>\n                {route.badge && badgeTemplate(route.badge)}\n              </NavLink>\n            </Link>\n          )}\n          {hasChildren && (\n            <NavLink\n              className=\"nav-link d-flex align-items-center\"\n              onClick={() => toggleMenu(index)}\n            >\n              <AnimatedIcon\n                animationData={route.icon}\n                size={iconSize}\n                isStopped={!hovered}\n              />\n              <span className=\"mr-auto menu-name\">\n                {capitalize(route.name)}\n              </span>\n              {route.badge && badgeTemplate(route.badge)}\n              {hasChildren && (\n                <span\n                  className={`caret  ${\n                    activeRoute === index ? \"caret-active\" : \"\"\n                  }`}\n                >\n                  <AnimatedIcon animationData={Chevron} size={12} />\n                </span>\n              )}\n            </NavLink>\n          )}\n        </>\n\n        {hasChildren && (\n          <Collapse\n            isOpen={activeRoute === index ? true : false}\n            className=\"sub-menu\"\n          >\n            <Nav vertical>\n              {route.children.map((subitem, index) => (\n                <NavItem\n                  key={index}\n                  className={\n                    pathname === route.path + subitem.path ? \"active\" : \"\"\n                  }\n                >\n                  <Link\n                    href={`${route.path ? route.path : \"\"}${\n                      subitem.path ? subitem.path : \"\"\n                    }`}\n                    as={`${\n                      subitem.path.indexOf(\"//\") !== -1\n                        ? \"\"\n                        : process.env.baseUrl\n                    }${route.path ? route.path.replace(\"/\", \"\") : \"\"}${\n                      subitem.path ? subitem.path : \"\"\n                    }`}\n                    passHref\n                  >\n                    <NavLink>\n                      <span className=\"mr-auto menu-name\">\n                        {capitalize(subitem.name)}\n                      </span>\n                      {subitem.badge && badgeTemplate(subitem.badge)}\n                    </NavLink>\n                  </Link>\n                </NavItem>\n              ))}\n            </Nav>\n          </Collapse>\n        )}\n      </NavItem>\n    </div>\n  );\n};\n\nSidebarItem.propTypes = {\n  route: PropTypes.object,\n  index: PropTypes.number,\n  activeRoute: PropTypes.number,\n  toggleMenu: PropTypes.func\n};\n\nexport default SidebarItem;\n"]},"metadata":{},"sourceType":"module"}