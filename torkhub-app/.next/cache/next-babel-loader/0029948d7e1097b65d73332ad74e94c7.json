{"ast":null,"code":"var _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/core/taskboard/TaskList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport TaskItem from \"./TaskItem\";\nconst InnerTaskList = React.memo(function InnerTaskList(props) {\n  return props.tasks.map((task, index) => __jsx(Draggable, {\n    key: \"\".concat(index, \"-\").concat(task.title),\n    draggableId: \"\".concat(index, \"-\").concat(task.title),\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, (dragProvided, dragSnapshot) => __jsx(TaskItem, {\n    key: task.id,\n    task: task,\n    isDragging: dragSnapshot.isDragging,\n    provided: dragProvided,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })));\n});\n\nconst InnerList = ({\n  tasks,\n  dropProvided\n}) => __jsx(\"div\", {\n  ref: dropProvided.innerRef,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, __jsx(InnerTaskList, {\n  tasks: tasks,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}), dropProvided.placeholder);\n\nconst TaskList = ({\n  ignoreContainerClipping,\n  isDropDisabled,\n  listId,\n  tasks,\n  title\n}) => __jsx(Droppable, {\n  droppableId: listId,\n  ignoreContainerClipping: ignoreContainerClipping,\n  isDropDisabled: isDropDisabled,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, (dropProvided, dropSnapshot) => __jsx(InnerList, {\n  tasks: tasks,\n  title: title,\n  dropProvided: dropProvided,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }\n}));\n\nTaskList.defaultProps = {\n  listId: \"LIST\"\n};\nexport default TaskList;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/core/taskboard/TaskList.js"],"names":["Draggable","Droppable","TaskItem","InnerTaskList","React","memo","props","tasks","map","task","index","title","dragProvided","dragSnapshot","id","isDragging","InnerList","dropProvided","innerRef","placeholder","TaskList","ignoreContainerClipping","isDropDisabled","listId","dropSnapshot","defaultProps"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAW,SAASF,aAAT,CAAuBG,KAAvB,EAA8B;AAC7D,SAAOA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KACrB,MAAC,SAAD;AACE,IAAA,GAAG,YAAKA,KAAL,cAAcD,IAAI,CAACE,KAAnB,CADL;AAEE,IAAA,WAAW,YAAKD,KAAL,cAAcD,IAAI,CAACE,KAAnB,CAFb;AAGE,IAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACE,YAAD,EAAeC,YAAf,KACC,MAAC,QAAD;AACE,IAAA,GAAG,EAAEJ,IAAI,CAACK,EADZ;AAEE,IAAA,IAAI,EAAEL,IAFR;AAGE,IAAA,UAAU,EAAEI,YAAY,CAACE,UAH3B;AAIE,IAAA,QAAQ,EAAEH,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADK,CAAP;AAgBD,CAjBqB,CAAtB;;AAmBA,MAAMI,SAAS,GAAG,CAAC;AAAET,EAAAA,KAAF;AAASU,EAAAA;AAAT,CAAD,KAChB;AAAK,EAAA,GAAG,EAAEA,YAAY,CAACC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,aAAD;AAAe,EAAA,KAAK,EAAEX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGU,YAAY,CAACE,WAFhB,CADF;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,uBADgB;AAEhBC,EAAAA,cAFgB;AAGhBC,EAAAA,MAHgB;AAIhBhB,EAAAA,KAJgB;AAKhBI,EAAAA;AALgB,CAAD,KAOf,MAAC,SAAD;AACE,EAAA,WAAW,EAAEY,MADf;AAEE,EAAA,uBAAuB,EAAEF,uBAF3B;AAGE,EAAA,cAAc,EAAEC,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKG,CAACL,YAAD,EAAeO,YAAf,KACC,MAAC,SAAD;AAAW,EAAA,KAAK,EAAEjB,KAAlB;AAAyB,EAAA,KAAK,EAAEI,KAAhC;AAAuC,EAAA,YAAY,EAAEM,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,CAPF;;AAkBAG,QAAQ,CAACK,YAAT,GAAwB;AACtBF,EAAAA,MAAM,EAAE;AADc,CAAxB;AAIA,eAAeH,QAAf","sourcesContent":["import { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport TaskItem from \"./TaskItem\";\n\nconst InnerTaskList = React.memo(function InnerTaskList(props) {\n  return props.tasks.map((task, index) => (\n    <Draggable\n      key={`${index}-${task.title}`}\n      draggableId={`${index}-${task.title}`}\n      index={index}\n    >\n      {(dragProvided, dragSnapshot) => (\n        <TaskItem\n          key={task.id}\n          task={task}\n          isDragging={dragSnapshot.isDragging}\n          provided={dragProvided}\n        />\n      )}\n    </Draggable>\n  ));\n});\n\nconst InnerList = ({ tasks, dropProvided }) => (\n  <div ref={dropProvided.innerRef}>\n    <InnerTaskList tasks={tasks} />\n    {dropProvided.placeholder}\n  </div>\n);\n\nconst TaskList = ({\n  ignoreContainerClipping,\n  isDropDisabled,\n  listId,\n  tasks,\n  title\n}) => (\n  <Droppable\n    droppableId={listId}\n    ignoreContainerClipping={ignoreContainerClipping}\n    isDropDisabled={isDropDisabled}\n  >\n    {(dropProvided, dropSnapshot) => (\n      <InnerList tasks={tasks} title={title} dropProvided={dropProvided} />\n    )}\n  </Droppable>\n);\n\nTaskList.defaultProps = {\n  listId: \"LIST\"\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}