{"ast":null,"code":"var _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/core/ProfileCard.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Card, CardBody, Carousel, CarouselIndicators, CarouselItem, Col, Row } from \"reactstrap\";\nimport AnimatedIcon from \"./AnimatedIcon\";\nimport Avatar from \"./Avatar\";\nimport Chat from \"../../public/animated-icons/speech/speech.json\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nconst ProfileCard = ({\n  name,\n  avatar,\n  imageHeight,\n  location,\n  stats,\n  images,\n  callHandler,\n  messageHandler\n}) => {\n  const {\n    0: activeIndex,\n    1: setActiveIndex\n  } = useState(0);\n  const {\n    0: animating,\n    1: setAnimating\n  } = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"cover\",\n    style: {\n      height: imageHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Carousel, {\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    className: \"rounded-top overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, images.map((image, index) => __jsx(CarouselItem, {\n    onExiting: () => setAnimating(true),\n    onExited: () => setAnimating(false),\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${image})`,\n      height: imageHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }))), __jsx(CarouselIndicators, {\n    items: images,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"content text-center p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    className: \"mb-4 justify-content-around align-items.center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"profile-card-picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: messageHandler,\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, __jsx(AnimatedIcon, {\n    animationData: Chat,\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), __jsx(Avatar, {\n    alt: name,\n    src: avatar,\n    size: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))), __jsx(\"h6\", {\n    className: \"mb-0 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, name, \" - \", __jsx(\"small\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }\n  }, location)))), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, stats.map((stat, index) => __jsx(Col, {\n    className: \"text-center\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, stat.value), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, stat.title))))));\n};\n\nProfileCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  images: PropTypes.array.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    value: PropTypes.number\n  })).isRequired\n};\nexport default ProfileCard;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/core/ProfileCard.js"],"names":["Button","Card","CardBody","Carousel","CarouselIndicators","CarouselItem","Col","Row","AnimatedIcon","Avatar","Chat","PropTypes","useState","ProfileCard","name","avatar","imageHeight","location","stats","images","callHandler","messageHandler","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","goToIndex","newIndex","height","map","image","index","backgroundImage","stat","value","title","propTypes","string","isRequired","array","number","arrayOf","shape"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,kBALF,EAMEC,YANF,EAOEC,GAPF,EAQEC,GARF,QASO,YATP;AAWA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,gDAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA,WAHmB;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA,KALmB;AAMnBC,EAAAA,MANmB;AAOnBC,EAAAA,WAPmB;AAQnBC,EAAAA;AARmB,CAAD,KASd;AACJ,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,IAAI,GAAG,MAAM;AACjB,QAAIF,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGL,WAAW,KAAKH,MAAM,CAACS,MAAP,GAAgB,CAAhC,GAAoC,CAApC,GAAwCN,WAAW,GAAG,CAAxE;AACAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GAJD;;AAMA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIL,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGL,WAAW,KAAK,CAAhB,GAAoBH,MAAM,CAACS,MAAP,GAAgB,CAApC,GAAwCN,WAAW,GAAG,CAAxE;AACAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAGC,QAAQ,IAAI;AAC5B,QAAIP,SAAJ,EAAe;AACfD,IAAAA,cAAc,CAACQ,QAAD,CAAd;AACD,GAHD;;AAIA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEhB;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,WAAW,EAAEM,WADf;AAEE,IAAA,IAAI,EAAEI,IAFR;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,SAAS,EAAC,6BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACV,MAAC,YAAD;AACE,IAAA,SAAS,EAAE,MAAMV,YAAY,CAAC,IAAD,CAD/B;AAEE,IAAA,QAAQ,EAAE,MAAMA,YAAY,CAAC,KAAD,CAF9B;AAGE,IAAA,GAAG,EAAEU,KAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAG,OAAMF,KAAM,GADzB;AAELF,MAAAA,MAAM,EAAEhB;AAFH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CANH,EAqBE,MAAC,kBAAD;AACE,IAAA,KAAK,EAAEG,MADT;AAEE,IAAA,WAAW,EAAEG,WAFf;AAGE,IAAA,cAAc,EAAEQ,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF,EA4BE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAET,cAAjB;AAAiC,IAAA,SAAS,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,aAAa,EAAEX,IAA7B;AAAmC,IAAA,IAAI,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEI,IAAb;AAAmB,IAAA,GAAG,EAAEC,MAAxB;AAAgC,IAAA,IAAI,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,EAUE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,SACW;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BG,QAA/B,CADX,CAVF,CA5BF,CADF,EA4CE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACe,GAAN,CAAU,CAACI,IAAD,EAAOF,KAAP,KACT,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBE,IAAI,CAACC,KAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAI,CAACE,KAAb,CAFF,CADD,CADH,CADF,CA5CF,CADF;AAyDD,CAtFD;;AAwFA1B,WAAW,CAAC2B,SAAZ,GAAwB;AACtB1B,EAAAA,IAAI,EAAEH,SAAS,CAAC8B,MAAV,CAAiBC,UADD;AAEtB3B,EAAAA,MAAM,EAAEJ,SAAS,CAAC8B,MAAV,CAAiBC,UAFH;AAGtBvB,EAAAA,MAAM,EAAER,SAAS,CAACgC,KAAV,CAAgBD,UAHF;AAItB1B,EAAAA,WAAW,EAAEL,SAAS,CAACiC,MAAV,CAAiBF,UAJR;AAKtBzB,EAAAA,QAAQ,EAAEN,SAAS,CAAC8B,MAAV,CAAiBC,UALL;AAMtBxB,EAAAA,KAAK,EAAEP,SAAS,CAACkC,OAAV,CACLlC,SAAS,CAACmC,KAAV,CAAgB;AACdP,IAAAA,KAAK,EAAE5B,SAAS,CAAC8B,MADH;AAEdH,IAAAA,KAAK,EAAE3B,SAAS,CAACiC;AAFH,GAAhB,CADK,EAKLF;AAXoB,CAAxB;AAcA,eAAe7B,WAAf","sourcesContent":["import {\n  Button,\n  Card,\n  CardBody,\n  Carousel,\n  CarouselIndicators,\n  CarouselItem,\n  Col,\n  Row\n} from \"reactstrap\";\n\nimport AnimatedIcon from \"./AnimatedIcon\";\nimport Avatar from \"./Avatar\";\nimport Chat from \"../../public/animated-icons/speech/speech.json\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\n\nconst ProfileCard = ({\n  name,\n  avatar,\n  imageHeight,\n  location,\n  stats,\n  images,\n  callHandler,\n  messageHandler\n}) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? images.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n  return (\n    <Card>\n      <div className=\"cover\" style={{ height: imageHeight }}>\n        <Carousel\n          activeIndex={activeIndex}\n          next={next}\n          previous={previous}\n          className=\"rounded-top overflow-hidden\"\n        >\n          {images.map((image, index) => (\n            <CarouselItem\n              onExiting={() => setAnimating(true)}\n              onExited={() => setAnimating(false)}\n              key={index}\n            >\n              <div\n                className=\"image\"\n                style={{\n                  backgroundImage: `url(${image})`,\n                  height: imageHeight\n                }}\n              />\n            </CarouselItem>\n          ))}\n          <CarouselIndicators\n            items={images}\n            activeIndex={activeIndex}\n            onClickHandler={goToIndex}\n          />\n        </Carousel>\n        <div className=\"content text-center p-4\">\n          <Row className=\"mb-4 justify-content-around align-items.center\">\n            <div className=\"profile-card-picture\">\n              <Button onClick={messageHandler} className=\"message\">\n                <AnimatedIcon animationData={Chat} size={16} />\n              </Button>\n\n              <Avatar alt={name} src={avatar} size={100} />\n            </div>\n          </Row>\n          <h6 className=\"mb-0 text-white\">\n            {name} - <small className=\"text-white\">{location}</small>\n          </h6>\n        </div>\n      </div>\n      <CardBody>\n        <Row>\n          {stats.map((stat, index) => (\n            <Col className=\"text-center\" key={index}>\n              <h5 className=\"mb-0\">{stat.value}</h5>\n              <small>{stat.title}</small>\n            </Col>\n          ))}\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n\nProfileCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  images: PropTypes.array.isRequired,\n  imageHeight: PropTypes.number.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      value: PropTypes.number\n    })\n  ).isRequired\n};\n\nexport default ProfileCard;\n"]},"metadata":{},"sourceType":"module"}