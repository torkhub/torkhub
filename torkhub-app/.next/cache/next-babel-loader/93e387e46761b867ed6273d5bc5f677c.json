{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/lib/lottie.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport lottie from \"lottie-web\";\nimport lottieApi from \"lottie-api/dist/lottie_api\";\nexport default class Lottie extends React.Component {\n  componentDidMount() {\n    const {\n      options,\n      eventListeners\n    } = this.props;\n    const {\n      loop,\n      autoplay,\n      animationData,\n      rendererSettings,\n      segments\n    } = options;\n    this.options = {\n      container: this.el,\n      renderer: \"svg\",\n      loop: loop !== false,\n      autoplay: autoplay !== false,\n      segments: segments !== false,\n      animationData,\n      rendererSettings\n    };\n    this.options = _objectSpread({}, this.options, {}, options);\n    this.anim = lottie.loadAnimation(this.options);\n    this.setSpeed();\n    this.setDirection();\n    this.animApi = lottieApi.createAnimationApi(this.anim);\n    this.registerEvents(eventListeners);\n    this.setAnimationControl();\n  }\n\n  UNSAFE_componentWillUpdate(nextProps\n  /* , nextState */\n  ) {\n    /* Recreate the animation handle if the data is changed */\n    if (this.options.animationData !== nextProps.options.animationData) {\n      this.deRegisterEvents(this.props.eventListeners);\n      this.destroy();\n      this.options = _objectSpread({}, this.options, {}, nextProps.options);\n      this.anim = lottie.loadAnimation(this.options);\n      this.animApi = lottieApi.createAnimationApi(this.anim);\n      this.registerEvents(nextProps.eventListeners);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.isStopped) {\n      this.stop();\n    } else if (this.props.segments) {\n      const shouldForce = !!this.props.forceSegments;\n      this.playSegments(shouldForce);\n    } else {\n      this.play();\n    }\n\n    this.setAnimationControl();\n    this.pause();\n    this.setSpeed();\n    this.setDirection();\n  }\n\n  componentWillUnmount() {\n    this.deRegisterEvents(this.props.eventListeners);\n    this.destroy();\n    this.options.animationData = null;\n    this.anim = null;\n    this.animApi = null;\n  }\n\n  setSpeed() {\n    this.anim.setSpeed(this.props.speed);\n  }\n\n  setDirection() {\n    this.anim.setDirection(this.props.direction);\n  }\n\n  setAnimationControl() {\n    const {\n      animationControl\n    } = this.props;\n\n    if (animationControl) {\n      const properties = _Object$keys(animationControl);\n\n      properties.forEach(property => {\n        const propertyPath = this.animApi.getKeyPath(property);\n        const value = animationControl[property];\n        this.animApi.addValueCallback(propertyPath, () => value);\n      });\n    }\n  }\n\n  play() {\n    this.anim.play();\n  }\n\n  playSegments(shouldForce) {\n    this.anim.playSegments(this.props.segments, shouldForce);\n  }\n\n  stop() {\n    this.anim.stop();\n  }\n\n  pause() {\n    if (this.props.isPaused && !this.anim.isPaused) {\n      this.anim.pause();\n    } else if (!this.props.isPaused && this.anim.isPaused) {\n      this.anim.pause();\n    }\n  }\n\n  destroy() {\n    this.anim.destroy();\n  }\n\n  registerEvents(eventListeners) {\n    eventListeners.forEach(eventListener => {\n      this.anim.addEventListener(eventListener.eventName, eventListener.callback);\n    });\n  }\n\n  deRegisterEvents(eventListeners) {\n    eventListeners.forEach(eventListener => {\n      this.anim.removeEventListener(eventListener.eventName, eventListener.callback);\n    });\n  }\n\n  render() {\n    const {\n      width,\n      height,\n      ariaRole,\n      ariaLabel,\n      title\n    } = this.props;\n\n    const getSize = initial => {\n      let size;\n\n      if (typeof initial === \"number\") {\n        size = `${initial}px`;\n      } else {\n        size = initial || \"100%\";\n      }\n\n      return size;\n    };\n\n    const lottieStyles = _objectSpread({\n      width: getSize(width),\n      height: getSize(height),\n      overflow: \"hidden\",\n      margin: \"0 auto\",\n      outline: \"none\"\n    }, this.props.style);\n\n    return (// Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      __jsx(\"div\", {\n        ref: c => {\n          this.el = c;\n        },\n        style: lottieStyles,\n        title: title,\n        role: ariaRole,\n        \"aria-label\": ariaLabel,\n        tabIndex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }\n      })\n    );\n  }\n\n}\nLottie.propTypes = {\n  eventListeners: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isStopped: PropTypes.bool,\n  isPaused: PropTypes.bool,\n  speed: PropTypes.number,\n  segments: PropTypes.arrayOf(PropTypes.number),\n  forceSegments: PropTypes.bool,\n  direction: PropTypes.number,\n  ariaRole: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  title: PropTypes.string,\n  style: PropTypes.string\n};\nLottie.defaultProps = {\n  eventListeners: [],\n  isStopped: false,\n  isPaused: false,\n  speed: 1,\n  ariaRole: \"button\",\n  ariaLabel: \"animation\",\n  title: \"\"\n};","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/lib/lottie.js"],"names":["PropTypes","React","lottie","lottieApi","Lottie","Component","componentDidMount","options","eventListeners","props","loop","autoplay","animationData","rendererSettings","segments","container","el","renderer","anim","loadAnimation","setSpeed","setDirection","animApi","createAnimationApi","registerEvents","setAnimationControl","UNSAFE_componentWillUpdate","nextProps","deRegisterEvents","destroy","componentDidUpdate","isStopped","stop","shouldForce","forceSegments","playSegments","play","pause","componentWillUnmount","speed","direction","animationControl","properties","forEach","property","propertyPath","getKeyPath","value","addValueCallback","isPaused","eventListener","addEventListener","eventName","callback","removeEventListener","render","width","height","ariaRole","ariaLabel","title","getSize","initial","size","lottieStyles","overflow","margin","outline","style","c","propTypes","arrayOf","object","isRequired","oneOfType","string","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport lottie from \"lottie-web\";\nimport lottieApi from \"lottie-api/dist/lottie_api\";\n\nexport default class Lottie extends React.Component {\n  componentDidMount() {\n    const { options, eventListeners } = this.props;\n\n    const {\n      loop,\n      autoplay,\n      animationData,\n      rendererSettings,\n      segments\n    } = options;\n\n    this.options = {\n      container: this.el,\n      renderer: \"svg\",\n      loop: loop !== false,\n      autoplay: autoplay !== false,\n      segments: segments !== false,\n      animationData,\n      rendererSettings\n    };\n\n    this.options = { ...this.options, ...options };\n\n    this.anim = lottie.loadAnimation(this.options);\n    this.setSpeed();\n    this.setDirection();\n    this.animApi = lottieApi.createAnimationApi(this.anim);\n    this.registerEvents(eventListeners);\n    this.setAnimationControl();\n  }\n\n  UNSAFE_componentWillUpdate(nextProps /* , nextState */) {\n    /* Recreate the animation handle if the data is changed */\n    if (this.options.animationData !== nextProps.options.animationData) {\n      this.deRegisterEvents(this.props.eventListeners);\n      this.destroy();\n      this.options = { ...this.options, ...nextProps.options };\n      this.anim = lottie.loadAnimation(this.options);\n      this.animApi = lottieApi.createAnimationApi(this.anim);\n      this.registerEvents(nextProps.eventListeners);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.isStopped) {\n      this.stop();\n    } else if (this.props.segments) {\n      const shouldForce = !!this.props.forceSegments;\n      this.playSegments(shouldForce);\n    } else {\n      this.play();\n    }\n\n    this.setAnimationControl();\n    this.pause();\n    this.setSpeed();\n    this.setDirection();\n  }\n\n  componentWillUnmount() {\n    this.deRegisterEvents(this.props.eventListeners);\n    this.destroy();\n    this.options.animationData = null;\n    this.anim = null;\n    this.animApi = null;\n  }\n\n  setSpeed() {\n    this.anim.setSpeed(this.props.speed);\n  }\n\n  setDirection() {\n    this.anim.setDirection(this.props.direction);\n  }\n\n  setAnimationControl() {\n    const { animationControl } = this.props;\n    if (animationControl) {\n      const properties = Object.keys(animationControl);\n\n      properties.forEach(property => {\n        const propertyPath = this.animApi.getKeyPath(property);\n        const value = animationControl[property];\n        this.animApi.addValueCallback(propertyPath, () => value);\n      });\n    }\n  }\n\n  play() {\n    this.anim.play();\n  }\n\n  playSegments(shouldForce) {\n    this.anim.playSegments(this.props.segments, shouldForce);\n  }\n\n  stop() {\n    this.anim.stop();\n  }\n\n  pause() {\n    if (this.props.isPaused && !this.anim.isPaused) {\n      this.anim.pause();\n    } else if (!this.props.isPaused && this.anim.isPaused) {\n      this.anim.pause();\n    }\n  }\n\n  destroy() {\n    this.anim.destroy();\n  }\n\n  registerEvents(eventListeners) {\n    eventListeners.forEach(eventListener => {\n      this.anim.addEventListener(\n        eventListener.eventName,\n        eventListener.callback\n      );\n    });\n  }\n\n  deRegisterEvents(eventListeners) {\n    eventListeners.forEach(eventListener => {\n      this.anim.removeEventListener(\n        eventListener.eventName,\n        eventListener.callback\n      );\n    });\n  }\n\n  render() {\n    const { width, height, ariaRole, ariaLabel, title } = this.props;\n\n    const getSize = initial => {\n      let size;\n\n      if (typeof initial === \"number\") {\n        size = `${initial}px`;\n      } else {\n        size = initial || \"100%\";\n      }\n\n      return size;\n    };\n\n    const lottieStyles = {\n      width: getSize(width),\n      height: getSize(height),\n      overflow: \"hidden\",\n      margin: \"0 auto\",\n      outline: \"none\",\n      ...this.props.style\n    };\n\n    return (\n      // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        ref={c => {\n          this.el = c;\n        }}\n        style={lottieStyles}\n        title={title}\n        role={ariaRole}\n        aria-label={ariaLabel}\n        tabIndex=\"0\"\n      />\n    );\n  }\n}\n\nLottie.propTypes = {\n  eventListeners: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.object.isRequired,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isStopped: PropTypes.bool,\n  isPaused: PropTypes.bool,\n  speed: PropTypes.number,\n  segments: PropTypes.arrayOf(PropTypes.number),\n  forceSegments: PropTypes.bool,\n  direction: PropTypes.number,\n  ariaRole: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  title: PropTypes.string,\n  style: PropTypes.string\n};\n\nLottie.defaultProps = {\n  eventListeners: [],\n  isStopped: false,\n  isPaused: false,\n  speed: 1,\n  ariaRole: \"button\",\n  ariaLabel: \"animation\",\n  title: \"\"\n};\n"]},"metadata":{},"sourceType":"module"}