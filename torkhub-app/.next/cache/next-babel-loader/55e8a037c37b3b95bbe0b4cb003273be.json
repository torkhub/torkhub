{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useEffect, useState } from \"react\";\nimport { ListGroup, ListGroupItem, Nav, NavItem, NavLink, Navbar } from \"reactstrap\";\nimport AnimatedIcon from \"./core/AnimatedIcon\";\nimport Arrow from \"../public/animated-icons/forward/forward.json\";\nimport Avatar from \"./core/Avatar\";\nimport Bookmark from \"../public/animated-icons/bookmark/bookmark.json\";\nimport Flag from \"../public/animated-icons/flag/flag.json\";\nimport Heart from \"../public/animated-icons/heart/heart.json\";\nimport Refresh from \"../public/animated-icons/restart/restart.json\";\nimport Sidebar from \"./core/Sidebar\";\nimport Star from \"../public/animated-icons/star/star.json\";\nimport distanceInWordsToNow from \"date-fns/distance_in_words_to_now\";\nimport fetch from \"../lib/fetch\";\nimport format from \"date-fns/format\";\nimport { useAppState } from \"./core/AppProvider\";\nimport useSWR from \"swr\";\n\nconst createMarkup = body => {\n  return {\n    __html: body\n  };\n};\n\nconst Messages = () => {\n  const _useAppState = useAppState(),\n        _useAppState2 = _slicedToArray(_useAppState, 1),\n        state = _useAppState2[0];\n\n  const _useSWR = useSWR(\"\".concat(process.env.baseUrl, \"api/messages\"), fetch),\n        data = _useSWR.data,\n        error = _useSWR.error;\n\n  const _useState = useState(true),\n        open = _useState[0],\n        setOpened = _useState[1];\n\n  const _useState2 = useState(0),\n        selectedIndex = _useState2[0],\n        setSelectedIndex = _useState2[1];\n\n  useEffect(() => {\n    setOpened(state.mobile ? false : true);\n  }, [state.mobile]);\n\n  const onSetSidebarOpen = open => {\n    setOpened(open);\n  };\n\n  const messageList = () => {\n    if (error) return __jsx(\"div\", {\n      className: \"d-flex align-items-center justify-content-center h-100\"\n    }, \"Failed to load data\");\n    if (!data) return __jsx(\"div\", {\n      className: \"d-flex align-items-center justify-content-center h-100\"\n    }, \"Loading...\");\n    return data.map((message, index) => __jsx(ListGroupItem, {\n      tag: \"a\",\n      href: \"#\",\n      action: true,\n      flush: \"true\",\n      className: \"\".concat(selectedIndex === index ? \"active-message border-bottom border-left-0 border-right-0\" : \"bg-transparent border-0\", \" rounded-0 border-light py-4\"),\n      onClick: e => {\n        e.preventDefault();\n        setSelectedIndex(index);\n      },\n      key: index\n    }, __jsx(\"div\", {\n      className: \"w-100 d-flex flex-row align-items-center\"\n    }, __jsx(\"span\", {\n      className: \"mr-3 position-relative\"\n    }, __jsx(Avatar, {\n      src: message.avatar ? message.avatar : \"\",\n      alt: message.from,\n      size: 48,\n      status: [\"danger\", \"success\", \"info\", \"warning\", \"secondary\"][Math.floor(Math.random() * 5)]\n    })), __jsx(\"span\", {\n      className: \"w-100\"\n    }, __jsx(\"small\", {\n      className: \"d-flex w-100 text-muted\"\n    }, __jsx(\"span\", null, message.from), __jsx(\"span\", {\n      className: \"mr-auto\"\n    }), __jsx(\"span\", null, distanceInWordsToNow(new Date(message.date)))), __jsx(\"span\", {\n      className: \"d-block\"\n    }, message.subject)))));\n  };\n\n  const messages = __jsx(\"div\", {\n    className: \"overflow-hidden d-flex h-100 flex-column flex-1 message-sidebar bg-white\"\n  }, __jsx(Navbar, {\n    className: \"bg-white\",\n    expand: true\n  }, __jsx(Nav, {\n    className: \"d-flex justify-content-between align-items-center w-100 text-center text-body\",\n    navbar: true\n  }, __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\"\n  }, __jsx(AnimatedIcon, {\n    animationData: Bookmark,\n    size: 18\n  }))), __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\"\n  }, __jsx(AnimatedIcon, {\n    animationData: Heart,\n    size: 18\n  }))), __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\"\n  }, __jsx(AnimatedIcon, {\n    animationData: Star,\n    size: 18\n  }))), __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\"\n  }, __jsx(AnimatedIcon, {\n    animationData: Refresh,\n    size: 18\n  }))), __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\"\n  }, __jsx(AnimatedIcon, {\n    animationData: Flag,\n    size: 18\n  }))))), __jsx(ListGroup, {\n    className: \"scroll-y flex-1\"\n  }, messageList()));\n\n  const sidebarProps = {\n    sidebar: messages,\n    width: 350,\n    open,\n    onSetOpen: onSetSidebarOpen,\n    isMobile: state.mobile,\n    rootClass: \"page-wrapper\",\n    sidebarClass: \"sidebar\",\n    contentClass: \"page-content\"\n  };\n  return __jsx(Fragment, null, __jsx(Sidebar, sidebarProps, __jsx(Message, {\n    id: selectedIndex,\n    toggleSidebar: () => setOpened(!open)\n  })));\n};\n\nconst Message = ({\n  id,\n  toggleSidebar\n}) => {\n  const _useSWR2 = useSWR(\"\".concat(process.env.baseUrl, \"api/messages?id=\").concat(id), fetch),\n        data = _useSWR2.data,\n        error = _useSWR2.error;\n\n  if (error) return __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-center h-100\",\n    style: {\n      paddingTop: \"60px\"\n    }\n  }, \"Failed to load data\");\n  if (!data) return __jsx(\"div\", {\n    className: \"d-flex align-items-center justify-content-center h-100\",\n    style: {\n      paddingTop: \"60px\"\n    }\n  }, \"Loading...\");\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    className: \"bg-white d-lg-none\",\n    expand: true\n  }, __jsx(Nav, {\n    className: \"d-flex justify-content-between align-items-center w-100 text-center text-body\",\n    navbar: true\n  }, __jsx(NavItem, null, __jsx(NavLink, {\n    href: \"#\",\n    className: \"d-flex align-items-center p-0\",\n    onClick: toggleSidebar\n  }, __jsx(\"span\", {\n    className: \"d-inline-block\",\n    style: {\n      transform: \"rotate(180deg)\"\n    }\n  }, __jsx(AnimatedIcon, {\n    animationData: Arrow,\n    size: 24\n  })), __jsx(\"span\", {\n    className: \"d-inline-block px-2\"\n  }, \"More messages\"))))), __jsx(\"div\", {\n    className: \"p-5\"\n  }, __jsx(\"div\", {\n    className: \"px-5 py-3\"\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center mb-3\"\n  }, __jsx(\"span\", {\n    className: \"mr-3 position-relative\"\n  }, __jsx(Avatar, {\n    src: data.avatar ? data.avatar : \"\",\n    alt: data.from,\n    size: 64,\n    status: [\"danger\", \"success\", \"info\", \"warning\", \"secondary\"][Math.floor(Math.random() * 5)]\n  })), __jsx(\"div\", {\n    className: \"pl-3\"\n  }, __jsx(\"div\", {\n    className: \"date\"\n  }, \" \", format(new Date(data.date), \"MMMM Do YYYY hh:mm\"), \" \"), __jsx(\"h6\", null, data.from))), __jsx(\"p\", {\n    className: \"lead my-4\"\n  }, data.subject), __jsx(\"div\", {\n    dangerouslySetInnerHTML: createMarkup(data.body)\n  }))));\n};\n\nexport default Messages;","map":null,"metadata":{},"sourceType":"module"}