{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Carousel, CarouselIndicators, CarouselItem } from \"reactstrap\";\nimport { useState } from \"react\";\n\nconst TaskItem = ({\n  task,\n  provided\n}) => {\n  const {\n    0: activeIndex,\n    1: setActiveIndex\n  } = useState(0);\n  const {\n    0: animating,\n    1: setAnimating\n  } = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === task.images.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? task.images.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n  return __jsx(\"div\", _extends({\n    className: `app-taskboard-task ${task.color ? task.color : \"\"}`,\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps), __jsx(\"div\", {\n    className: \"p-2\"\n  }, __jsx(\"p\", {\n    className: \"mb-0\"\n  }, task.title), __jsx(\"small\", {\n    className: `text-muted d-block ${task.images ? \"mb-2\" : \"\"}`\n  }, task.description), task.images && __jsx(\"div\", {\n    className: \"cover\",\n    style: {\n      height: 150\n    }\n  }, __jsx(Carousel, {\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    className: \"overflow-hidden\"\n  }, task.images.map((image, index) => __jsx(CarouselItem, {\n    onExiting: () => setAnimating(true),\n    onExited: () => setAnimating(false),\n    key: index\n  }, __jsx(\"div\", {\n    key: index,\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${image})`,\n      height: 150\n    }\n  }))), __jsx(CarouselIndicators, {\n    items: task.images,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex\n  })))));\n};\n\nexport default TaskItem;","map":null,"metadata":{},"sourceType":"module"}