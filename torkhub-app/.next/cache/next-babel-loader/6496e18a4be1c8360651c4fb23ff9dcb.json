{"ast":null,"code":"var _jsxFileName = \"/home/andhi/code/torkhub/torkhub-app/components/Calendar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, ButtonGroup, Card, Col, Row } from \"reactstrap\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport fetch from \"../lib/fetch\";\nimport moment from \"moment\";\nimport useSWR from \"swr\";\n\nconst CalendarApp = () => {\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.baseUrl}api/calendar`, fetch);\n  const localizer = momentLocalizer(moment);\n\n  const CustomToolbar = toolbar => {\n    const goToDayView = () => toolbar.onView(\"day\");\n\n    const goToWeekView = () => toolbar.onView(\"week\");\n\n    const goToMonthView = () => toolbar.onView(\"month\");\n\n    const goToBack = () => {\n      toolbar.date.setMonth(toolbar.date.getMonth() - 1);\n      toolbar.onNavigate(\"prev\");\n    };\n\n    const goToNext = () => {\n      toolbar.date.setMonth(toolbar.date.getMonth() + 1);\n      toolbar.onNavigate(\"next\");\n    };\n\n    const goToCurrent = () => {\n      const now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.onNavigate(\"current\");\n    };\n\n    const label = () => {\n      const date = moment(toolbar.date);\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, date.format(\"MMMM\")), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \" \", date.format(\"YYYY\")));\n    };\n\n    return __jsx(\"div\", {\n      className: \"d-flex justify-content-between align-items-center p-3 flex-column flex-sm-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, label())), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(ButtonGroup, {\n      className: \"button-shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToDayView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Day\"), __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToWeekView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Week\"), __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToMonthView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Month\"))), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(ButtonGroup, {\n      className: \"button-shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Back\"), __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToCurrent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Today\"), __jsx(Button, {\n      outline: true,\n      color: \"secondary\",\n      onClick: goToNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Next\"))));\n  };\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Failed to load calendar data\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    md: {\n      size: 10,\n      offset: 1\n    },\n    className: \"m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    className: \"app-calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Calendar, {\n    localizer: localizer,\n    events: data,\n    defaultDate: new Date(2018, 3, 1),\n    components: {\n      toolbar: CustomToolbar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CalendarApp;","map":{"version":3,"sources":["/home/andhi/code/torkhub/torkhub-app/components/Calendar.js"],"names":["Button","ButtonGroup","Card","Col","Row","Calendar","momentLocalizer","fetch","moment","useSWR","CalendarApp","data","error","process","env","baseUrl","localizer","CustomToolbar","toolbar","goToDayView","onView","goToWeekView","goToMonthView","goToBack","date","setMonth","getMonth","onNavigate","goToNext","goToCurrent","now","Date","setYear","getFullYear","label","format","size","offset"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup, Card, Col, Row } from \"reactstrap\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\n\nimport fetch from \"../lib/fetch\";\nimport moment from \"moment\";\nimport useSWR from \"swr\";\n\nconst CalendarApp = () => {\n  const { data, error } = useSWR(`${process.env.baseUrl}api/calendar`, fetch);\n\n  const localizer = momentLocalizer(moment);\n\n  const CustomToolbar = toolbar => {\n    const goToDayView = () => toolbar.onView(\"day\");\n\n    const goToWeekView = () => toolbar.onView(\"week\");\n\n    const goToMonthView = () => toolbar.onView(\"month\");\n\n    const goToBack = () => {\n      toolbar.date.setMonth(toolbar.date.getMonth() - 1);\n      toolbar.onNavigate(\"prev\");\n    };\n\n    const goToNext = () => {\n      toolbar.date.setMonth(toolbar.date.getMonth() + 1);\n      toolbar.onNavigate(\"next\");\n    };\n\n    const goToCurrent = () => {\n      const now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.onNavigate(\"current\");\n    };\n\n    const label = () => {\n      const date = moment(toolbar.date);\n      return (\n        <span>\n          <b>{date.format(\"MMMM\")}</b>\n          <span> {date.format(\"YYYY\")}</span>\n        </span>\n      );\n    };\n\n    return (\n      <div className=\"d-flex justify-content-between align-items-center p-3 flex-column flex-sm-row\">\n        <div>\n          <h3 className=\"mb-0\">{label()}</h3>\n        </div>\n        <div>\n          <ButtonGroup className=\"button-shadow\">\n            <Button outline color=\"secondary\" onClick={goToDayView}>\n              Day\n            </Button>\n            <Button outline color=\"secondary\" onClick={goToWeekView}>\n              Week\n            </Button>\n            <Button outline color=\"secondary\" onClick={goToMonthView}>\n              Month\n            </Button>\n          </ButtonGroup>\n        </div>\n        <div>\n          <ButtonGroup className=\"button-shadow\">\n            <Button outline color=\"secondary\" onClick={goToBack}>\n              Back\n            </Button>\n            <Button outline color=\"secondary\" onClick={goToCurrent}>\n              Today\n            </Button>\n            <Button outline color=\"secondary\" onClick={goToNext}>\n              Next\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  };\n\n  if (error) return <div>Failed to load calendar data</div>;\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <Row>\n      <Col md={{ size: 10, offset: 1 }} className=\"m-auto\">\n        <Card className=\"app-calendar\">\n          <Calendar\n            localizer={localizer}\n            events={data}\n            defaultDate={new Date(2018, 3, 1)}\n            components={{\n              toolbar: CustomToolbar\n            }}\n          />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CalendarApp;\n"]},"metadata":{},"sourceType":"module"}